// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/leafney/whisky/config"
	"github.com/leafney/whisky/internal/api"
	"github.com/leafney/whisky/internal/service"
	"github.com/leafney/whisky/pkg/leveldbx"
	"github.com/leafney/whisky/pkg/version"
	"github.com/leafney/whisky/pkg/xlogx"
)

// Injectors from wire.go:

func BuildInjector(stop chan struct{}) (*Injector, func(), error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, nil, err
	}
	xLogSvc := xlogx.NewXLogSvc(configConfig)
	info := version.NewInfo()
	home := &api.Home{
		VersionInfo: info,
	}
	router := &service.Router{
		XLog: xLogSvc,
	}
	apiRouter := &api.Router{
		XLog:      xLogSvc,
		RouterSvc: router,
	}
	levelDBSvc := leveldbx.NewLevelDBSvc(configConfig, xLogSvc, stop)
	yAcd := &service.YAcd{
		XLog:    xLogSvc,
		LevelDB: levelDBSvc,
	}
	apiYAcd := &api.YAcd{
		XLog:    xLogSvc,
		YacdSvc: yAcd,
	}
	netWork := &service.NetWork{
		XLog: xLogSvc,
	}
	apiNetWork := &api.NetWork{
		NetWorkSvc: netWork,
	}
	sCrash := &service.SCrash{
		XLog: xLogSvc,
	}
	apiSCrash := &api.SCrash{
		XLog:      xLogSvc,
		SCrashSvc: sCrash,
	}
	defRouter := DefRouter{
		HomeApi:    home,
		RouterApi:  apiRouter,
		YacdApi:    apiYAcd,
		NetWorkApi: apiNetWork,
		SCrashApi:  apiSCrash,
	}
	injector := &Injector{
		L: xLogSvc,
		R: defRouter,
		C: configConfig,
	}
	return injector, func() {
	}, nil
}
