# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - id: "whisky"
    main: 'main.go'
    binary: 'whisky'
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - arm64
    ldflags:
      - -s -w -X "main.Version={{.Env.APP_VERSION}}" -X "main.GitBranch={{.Env.GIT_BRANCH}}" -X "main.GitCommit={{.Env.GIT_COMMIT}}" -X "main.BuildTime={{.Env.BUILD_TIME}}"

upx:
  - enabled: true
    goos:
      - linux

archives:
  - files:
      - src: './config/config.yaml'
        strip_parent: true
    format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Bug fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: Others
      order: 999
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - '^Merge'
